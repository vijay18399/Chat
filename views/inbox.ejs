<div class="messaging">
    <div class="inbox_msg">
        <div class="inbox_people">
            <div class="headind_srch">
                <div class="recent_heading">
                    <h4>Recent</h4>
                </div>
                <div class="srch_bar">
                    <div class="stylish-input-group">
                        <input type="text" class="search-bar" placeholder="Search">
                        <span class="input-group-addon">
                            <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                        </span> </div>
                </div>
            </div>
            <div class="inbox_chat">
                <% for (var i=0; i< users.length; i++){ %>
                <% if(users[i].name!=user){ %>
                <div class="chat_list">
                    <div class="chat_people">
                        <div class="chat_img"> <img src="https://source.unsplash.com/random" alt="sunil">
                        </div>
                        <div class="chat_ib">
                            <h5>
                                <%= users[i].name %>
                            </h5>
                        </div>

                    </div>
                </div>
                <% }   %>
                <% } %>
            </div>
        </div>
        <div class="mesgs" style="display:none">

            <div class="msg_history">
                <div class="col-12 mb-3 pt-0 mt-0">
                    <span id="username"></span>
                </div>
                <h1>

                    <!-- <div class="incoming_msg">
                    <div class="incoming_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil">
                    </div>
                    <div class="received_msg">
                        <div class="received_withd_msg">
                            <p>Test which is a new approach to have all
                                solutions</p>
                            <span class="time_date"> 11:01 AM | June 9</span>
                        </div>
                    </div>
                </div>
                <div class="outgoing_msg">
                    <div class="sent_msg">
                        <p>Test which is a new approach to have all
                            solutions</p>
                        <span class="time_date"> 11:01 AM | June 9</span>
                    </div>
                </div> -->
            </div>
            <div class="type_msg">
                <span class="pencil_anim" style="display:none">Typing.....</span>
                <div class="input_msg_write">
                    <input type="text" class="write_msg" placeholder="Type a message"
                        style="border:0; outline: none;" />
                    <button class="msg_send_btn" type="button"><i class="fa fa-paper-plane-o"
                            aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
    </div>
</div>



<script src="/javascripts/socket.io.js"></script>
<script src="/javascripts/moment.min.js"></script>
<script>
    $("document").ready(function () {
        var username = null;
        var myname = '<%= user %>';
        var socket = io('http://localhost:7777', {
            query: {
                username: '<%= user %>'
            }
        });
        socket.on('connect', function () {
            //Add all controls here, instead of document load    
        });
        socket.on('typing', function (data) {
            if (myname != data.from) {
                $(".pencil_anim").html(myname + " is Typing" + data.to);
                $(".pencil_anim").show();

            }
        });
        socket.on('stoptyping', function (data) {
            if (myname != data.from) {
                $(".pencil_anim").hide();
            }
        });
        socket.on("message", function (data) {
            if (myname.trim() == data.from.trim()) {
                $(".msg_history").append(
                    `<div class="outgoing_msg">
                    <div class="sent_msg">
                        <p>${data.msg}</p>
                        <span class="time_date"> ${moment().fromNow()}</span>
                    </div>
                </div>`
                )
            } else if (myname.trim() == data.to.trim()) {
                $(".msg_history").append(
                    `<div class="incoming_msg">
                    <div class="incoming_msg_img "><img src="https://ptetutorials.com/images/user-profile.png" alt="${data.from}">
                        <span class="username">${username}</span>
                        </div>
                    <div class="received_msg">
                        <div class="received_withd_msg   ">
                                     
                            <p class="${getSentiment(data.score)}">${data.msg}  ${iscongratulations(data.msg)} ${isbirthday(data.msg)} ${isspam(data.spamcheck)}  ${isspamurl(data.isurlspam)} <span class="time_date" onclick="Translate('${data.msg}')" > see translation</span>  </p>
                            <span class="time_date"> ${moment().fromNow()} </span>
                           
                        </div>

                    </div>
                </div>`
                )
            }
            $(".pencil_anim").hide();
        })
        socket.on('newuser', function (data) {
            if (data.name != username) {
                //alert("new user joined")
            }
        })
        socket.on('disconnect', function () { });

        $(".pencil_anim").hide();
        username = $(this).find(".chat_ib").text();

        $(".chat_list").on('click', function () {
            $(".chat_list").removeClass("active_chat")
            $(this).addClass("active_chat")

            $("#username").html("Talking to <strong>" + $(this).find(".chat_ib").text() + "</strong>");
            $(".mesgs").show();
        })
        $(".msg_send_btn").on("click", function () {
            sendMessage();
        })
        $(".write_msg").keyup(function (event) {
            var data = $(".write_msg").val();

            if (data == null || data == "") {
                socket.emit('stoptyping', {
                    from: myname
                });
                return;
            }

            socket.emit('typing', {
                from: myname,
                to: username
            });
            if (event.which == 13) {
                sendMessage()
            }
        })

        function sendMessage() {
            var data = $(".write_msg").val();
            socket.emit('message', {
                from: myname,
                to: username,
                msg: data
            });
            $(".write_msg").val("");
        }

        function getSentiment(sentiment) {
            if (sentiment > 0.5) {
                return 'success';
            } else if (sentiment < 0.0) {
                return 'danger';
            } else {
                return 'default';
            }
        }

        function iscongratulations(str) {
            str = str.toLowerCase()
            if (str.includes("congratulations")) {
                return ("<b onclick='wishes()' >ðŸŽ‰</b>");
                
            }
            else {
                return ("");
            }


        }
        function isbirthday(str) {
            str = str.toLowerCase()
            if (str.includes("happy birthday")) {
                return ("<b onclick='success()' >ðŸŽ‚</b>");
            }
            else {
                return ("");
            }

        }
        function isspam(str) {
            if (str == "spam") {
                return ("<img  onclick='spamalert()' height='18px' src='https://img.icons8.com/cotton/64/000000/warning-shield.png'>");
            }
            else {
                return (" ");
            }
        }
        function isspamurl(str) {
            if (str) {
                return ("<b  onclick='spamurl()' >ðŸ¤¨</b>");
            }
            else {
                return (" ");
            }
        }


    });

    function spamalert() {
        swal({
            title: "This is Spam Message",
            icon: "warning",
            dangerMode: true,
        })

    }
    function success() {
        swal({
            title: 'Happy Birthday',
            icon: "success",
            button: "ok",
        });

    }
    function wishes() {
        swal({
            title: 'Congratulations',
            icon: "success",
            button: "ok",
        });

    }
    function spamurl() {
        swal({
            title: "This is Message Contains a URL",
            icon: "warning",
            dangerMode: true,
        });

    }
    function Translate(msg) {
var data = {  "msg" :  msg  }
axios.post('http://localhost:8080/api/translate',data)
    .then(function (response) {
        if(!response.data.error)
        {
            swal({
            title: "English :"+response.data.translation ,
            icon: "success",
            button: "ok",
        });

        }
        else{
            swal({
            title: "This is Message cannot be translated ",
            icon: "warning",
            dangerMode: true,
        });
        }
      
    })
    .catch(function (error) {
        swal({
            title: error,
            icon: "warning",
            dangerMode: true,
        });
    });   
}

</script>